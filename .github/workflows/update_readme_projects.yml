name: Update Pinned Projects in README

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch Pinned Repos and Generate Markdown
        id: generate_list
        run: |
          pinned_repos_json=$(gh api graphql -f query='
            query($login: String!) {
              user(login: $login) {
                pinnedItems(first: 6, types: REPOSITORY) {
                  nodes {
                    ... on Repository {
                      name
                      description
                      url
                      stargazerCount
                      primaryLanguage {
                        name
                        color
                      }
                      homepageUrl
                    }
                  }
                }
              }
            }' -f login='${{ github.repository_owner }}' --jq '.data.user.pinnedItems.nodes')

          markdown_list=$(echo "$pinned_repos_json" | jq -r '.[] |
            "### ðŸ“Œ [\(.name)](\\(.url))\n" +
            (if .homepageUrl and (.homepageUrl | length > 0) then "*   **Live Demo/Docs:** [\(.homepageUrl)](\\(.homepageUrl))\n" else "" end) +
            "*   \(.description // "No description provided.")\n" +
            "*   **Stars:** \(.stargazerCount) | **Language:** \(.primaryLanguage.name // "N/A")\n"
          ')

          markdown_list="${markdown_list//'%'/'%25'}"
          markdown_list="${markdown_list//$'\n'/'%0A'}"
          markdown_list="${markdown_list//$'\r'/'%0D'}"

          echo "markdown_list<<EOF" >> $GITHUB_OUTPUT
          echo "$markdown_list" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Inject Project List into README
        run: |
          START_MARKER="<!-- START_PROJECT_LIST -->"
          END_MARKER="<!-- END_PROJECT_LIST -->"
          README_FILE="README.md"
          TEMP_CONTENT_FILE="new_project_list.md"

          echo -e "${{ steps.generate_list.outputs.markdown_list }}" > "$TEMP_CONTENT_FILE"

          awk -v start="$START_MARKER" -v end="$END_MARKER" -v new_content_file="$TEMP_CONTENT_FILE" '
          BEGIN { printing = 1 }
          $0 ~ start {
            print;
            while ((getline line < new_content_file) > 0) {
              print line
            }
            close(new_content_file);
            printing = 0;
          }
          $0 ~ end { printing = 1 }
          printing { print }
          ' "$README_FILE" > temp_readme && mv temp_readme "$README_FILE"

          rm "$TEMP_CONTENT_FILE"

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if ! git diff --quiet README.md; then
            git add README.md
            git commit -m "Automated: Update pinned projects in README"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
